{"version":3,"sources":["webpack:///./src/app/pages/create/create.module.ts","webpack:///./src/app/pages/create/create.page.html","webpack:///./src/app/pages/create/create.page.scss","webpack:///./src/app/pages/create/create.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AACF;AACrD,sEAAsE;AACtE,sEAAsE;AACtE,2EAA2E;AAE9B;AAEF;AAE3C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;CACF,CAAC;AAYF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAV5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,kEAAmB;aACpB;YACD,YAAY,EAAE,CAAC,uDAAU,CAAC;SAC3B,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;AC9B7B,82C;;;;;;;;;;;ACAA,+DAA+D,+I;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AACA;AACK;AAOzE;IAIE,oBACS,WAA8B,EAC9B,SAA0B,EAC1B,gBAAkC,EACzC,WAAwB;QAHjB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAGzC,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,KAAK,CAAC;YACtC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAEK,+BAAU,GAAhB;;;;;;4BACkB,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;4BAC5C,OAAO,EAAE,gBAAgB;4BACzB,OAAO,EAAE,UAAU;4BACnB,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAJI,OAAO,GAAG,SAId;wBAEI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC;wBAChD,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,UAAU,CAAC;wBAClD,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,eAAe,CAAC;wBAC5D,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC;wBAEpD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,SAAS,EAAE,UAAU,EAAE,eAAe,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC;4BAClF,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;gCACrB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;4BAChC,CAAC,CAAC,CAAC;wBACL,CAAC,EACD,eAAK;4BACH,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACvB,CAAC,CACF,CAAC;wBAEG,qBAAM,OAAO,CAAC,OAAO,EAAE;4BAA9B,sBAAO,SAAuB,EAAC;;;;KAChC;IAED,6BAAQ,GAAR;IACA,CAAC;IA5CU,UAAU;QALtB,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,kGAAiC;;SAElC,CAAC;+EAMsB,gEAAiB;YACnB,8DAAe;YACR,iFAAgB;YAC5B,0DAAW;OARf,UAAU,CA8CtB;IAAD,iBAAC;CAAA;AA9CsB","file":"pages-create-create-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n//import { FormGroup, FormBuilder, Validators } from '@angular/forms';\n//import { LoadingController, AlertController } from '@ionic/angular';\n//import { FirestoreService } from '../../services/data/firestore.service';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CreatePage } from './create.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CreatePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule\n  ],\n  declarations: [CreatePage]\n})\nexport class CreatePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Create Song</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button routerLink=\\\"/home\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"home\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form [formGroup]=\\\"createSongForm\\\" (submit)=\\\"createSong()\\\">\\n    <ion-item>\\n      <ion-label stacked>Song Name</ion-label>\\n      <ion-input formControlName=\\\"songName\\\" type=\\\"text\\\" placeholder=\\\"What's this song called?\\\">\\n      </ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label stacked>Artist Name</ion-label>\\n      <ion-input formControlName=\\\"artistName\\\" type=\\\"text\\\" placeholder=\\\"Who sings this song?\\\">\\n      </ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label stacked>Album Name</ion-label>\\n      <ion-input formControlName=\\\"albumName\\\" type=\\\"text\\\" placeholder=\\\"What's the album's name?\\\">\\n      </ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label stacked>Song Description</ion-label>\\n      <ion-textarea formControlName=\\\"songDescription\\\" type=\\\"text\\\" placeholder=\\\"What's this song about?\\\">\\n      </ion-textarea>\\n    </ion-item>\\n\\n\\n    <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!createSongForm.valid\\\">\\n      Add Song\\n    </ion-button>\\n  </form>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NyZWF0ZS9jcmVhdGUucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { FirestoreService } from '../../services/data/firestore.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.page.html',\n  styleUrls: ['./create.page.scss'],\n})\nexport class CreatePage implements OnInit {\n  \n  public createSongForm: FormGroup;\n  router: any;\n  constructor(\n    public loadingCtrl: LoadingController,\n    public alertCtrl: AlertController,\n    public firestoreService: FirestoreService,\n    formBuilder: FormBuilder\n  ) {\n    this.createSongForm = formBuilder.group({\n      albumName: ['', Validators.required],\n      artistName: ['', Validators.required],\n      songDescription: ['', Validators.required],\n      songName: ['', Validators.required],\n    });\n  }\n  \n  async createSong() {\n    const loading = await this.loadingCtrl.create({\n      message: 'Please wait...',\n      spinner: 'crescent',\n      duration: 2000\n    });\n  \n    const albumName = this.createSongForm.value.albumName;\n    const artistName = this.createSongForm.value.artistName;\n    const songDescription = this.createSongForm.value.songDescription;\n    const songName = this.createSongForm.value.songName;\n  \n    this.firestoreService.createSong(albumName, artistName, songDescription, songName).then(() => {\n          loading.dismiss().then(() => {\n            this.router.navigateByUrl('');\n          });\n        },\n        error => {\n          console.error(error);\n        }\n      );\n  \n    return await loading.present();\n  }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}